=== tests/cases/conformance/classes/members/privateNames/privateNamesNoConflictWhenInheriting.ts ===
class A {
>A : Symbol(A, Decl(privateNamesNoConflictWhenInheriting.ts, 0, 0))

    #foo: number;
>#foo : Symbol(A[#foo], Decl(privateNamesNoConflictWhenInheriting.ts, 0, 9))
}

class B extends A {
>B : Symbol(B, Decl(privateNamesNoConflictWhenInheriting.ts, 2, 1))
>A : Symbol(A, Decl(privateNamesNoConflictWhenInheriting.ts, 0, 0))

    #foo: string;   // OK: private names are unique to each class
>#foo : Symbol(B[#foo], Decl(privateNamesNoConflictWhenInheriting.ts, 4, 19))
}

