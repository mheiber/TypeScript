=== tests/cases/conformance/classes/members/privateNames/privateNameFieldCallExpression.ts ===
class A {
>A : A

    #fieldFunc = () => this.x = 10;
>#fieldFunc : () => number
>() => this.x = 10 : () => number
>this.x = 10 : 10
>this.x : number
>this : this
>x : number
>10 : 10

    static #staticFieldFunc = () => A.staticX = 10;
>#staticFieldFunc : () => number
>() => A.staticX = 10 : () => number
>A.staticX = 10 : 10
>A.staticX : number
>A : typeof A
>staticX : number
>10 : 10

    x = 1;
>x : number
>1 : 1

    static staticX = 1;
>staticX : number
>1 : 1

    test() {
>test : () => void

        this.#fieldFunc();
>this.#fieldFunc() : number
>this.#fieldFunc : () => number
>this : this

        const func = this.#fieldFunc;
>func : () => number
>this.#fieldFunc : () => number
>this : this

        func();
>func() : number
>func : () => number

        A.#staticFieldFunc();
>A.#staticFieldFunc() : number
>A.#staticFieldFunc : () => number
>A : typeof A

        const func2 = A.#staticFieldFunc;
>func2 : () => number
>A.#staticFieldFunc : () => number
>A : typeof A

        func2();
>func2() : number
>func2 : () => number
    }
}

